<!-- Страницата работи с модел от тип 'IEnumerable<MvcTransplantation_kidney.Models.Doctor>', който представлява колекция от обекти от клас 'Doctor'.-->
@model IEnumerable<MvcTransplantation_kidney.Models.Doctor>

<!--Задава заглавието на страницата като "Начало", използвайки 'ViewData' за предаване на данни от контролера към изгледа.-->
@{
    ViewData["Title"] = "Начало";
}

<!--Заглавие на страницата (Heading 1) с текст "Начало" и го центрира с клас 'text-center'.-->
<h1 class="text-center">Начало</h1>

<!--Създава параграф, центриран на страницата, който съдържа връзка с действие 'Create'.-->
<p class="text-center">
    <a asp-action="Create">Създай нов</a>
</p>

<!--Започва HTML таблица с клас 'table'. 'thead' секцията съдържа заглавията на колоните.-->
<!--@Html.DisplayNameFor(model => model.UserId) динамично извежда името на свойството 'UserId' като заглавие на колоната.-->
<!--@Html.DisplayNameFor(model => model.FirstName) динамично извежда името на свойството 'FirstName' като заглавие на колоната.-->
<!--@Html.DisplayNameFor(model => model.LastName) динамично извежда името на свойството 'LastName' като заглавие на колоната.-->
<!--@Html.DisplayNameFor(model => model.Specialty) динамично извежда името на свойството 'Specialty' като заглавие на колоната.-->
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Specialty)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <!--Започва цикъл 'foreach', който преминава през всеки обект в модела.-->
@foreach (var item in Model) {
            <!-- За всеки доктор (представен като 'item'), кодът създава нов ред (<tr>). В първата клетка (<td>) се показва ИД на потребителя, във втората - първото име, в третата - фамилията, четвъртата - специалността на доктора.-->
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Specialty)
            </td>
            <td>
                    <!--Във петата клетка има три връзки: за редакция, детайли и изтриване на съответния доктор.-->
                <a asp-action="Edit" asp-route-id="@item.DoctorId">Редактирай</a>
                <a asp-action="Details" asp-route-id="@item.DoctorId">Детайли</a>
                <a asp-action="Delete" asp-route-id="@item.DoctorId">Изтрий</a>
            </td>
        </tr>
}
        <!--Цикълът 'foreach' завършва, и таблицата се затваря с </tbody> и </table>. Всички доктори ще бъдат показани в редове на тази таблица-->
    </tbody>
</table>
